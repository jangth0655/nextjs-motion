// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User { 
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  username String @unique
  avatar String?
  tokens Token[] 
  posts Post[]
  answers Answer[]
  favs Fav[]
  rooms Room[]
  chats Chat[]
}

model Token { 
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  payload String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model Post { 
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  comment String @db.MediumText
  image String?
  answers Answer[]
  favs Fav[]
}

model Answer {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  answer String @db.MediumText
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model Fav { 
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model Room {  
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users User[]
  chats Chat[]
}

model Chat { 
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId Int
  payload String @db.MediumText
  read Boolean @default(false)
}

